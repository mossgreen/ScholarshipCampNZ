@using System.Collections
@model IEnumerable<KendoUIDemo.ViewModels.ProductViewModel>

@(Html.Kendo().Grid(Model)
      .Name("mossgrid")
      .Columns(c =>
      {
          c.Bound(p => p.ProductId);
          c.Bound(p => p.ProductName);
          //c.Bound(p => p.Color);
          //c.Bound(p => p.ModelId);
          c.Command(cmd =>
          {
              cmd.Edit();
              cmd.Destroy();
          }).Title("Commands").Width(220);
      })
      .ToolBar(toolbar => toolbar.Create()) // The "create" command adds new data items.
      .Editable(editable => editable.Mode(GridEditMode.InLine))
      .Pageable()
      .DataSource(dataSource =>
                dataSource.Ajax()
                  .Model(model =>
                  {
                      model.Id(product => product.ProductId); // Specify the property which is the unique identifier of the model.
                      model.Field(product => product.ProductId).Editable(false); // Make the ProductID property not editable.
                  })
                  .Create(create => create.Action("Products_Create", "Home")) // Action invoked when the user saves a new data item.
                  .Read(read => read.Action("Products_Read", "Home"))  // Action invoked when the grid needs data.
                  .Update(update => update.Action("Products_Update", "Home"))  // Action invoked when the user saves an updated data item.
                  .Destroy(destroy => destroy.Action("Products_Destroy", "Home")) // Action invoked when the user removes a data item.
            )
            .Pageable()

)


@*<div class="container-fluid">
    <div class="row">
        <div class="col-xs-18 col-md-12">
			<div id="grid"></div>
		</div>
    </div>
</div>*@
@*<script>
	$(document).ready(function() {
	                
        $("#grid").kendoGrid({
            dataSource: {
                type: "odata",
                transport: {
                    read: "http://demos.telerik.com/kendo-ui/service/Northwind.svc/Orders"
                },
                schema: {
                    model: {
                        fields: {
                            OrderID: { type: "number" },
                            Freight: { type: "number" },
                            ShipName: { type: "string" },
                            OrderDate: { type: "date" },
                            ShipCity: { type: "string" }
                        }
                    }
                },
                pageSize: 20
            },
            height: 550,
            filterable: true,
            sortable: true,
            pageable: true,
            columns: [{
                    field:"OrderID",
                    filterable: false
                },
                "Freight",
                {
                    field: "OrderDate",
                    title: "Order Date",
                    format: "{0:MM/dd/yyyy}"
                }, {
                    field: "ShipName",
                    title: "Ship Name"
                }, {
                    field: "ShipCity",
                    title: "Ship City"
                }
            ]
        });
    });
</script>*@
